// <auto-generated />
using System;
using Isaac_AnomalyService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Isaac_AnomalyService.Migrations
{
    [DbContext(typeof(Isaac_AnomalyServiceContext))]
    [Migration("20201209121812_NewSensorErrorLogDatabase")]
    partial class NewSensorErrorLogDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Isaac_AnomalyService.Models.SensorError", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateTimeNext")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Error")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<double>("ValueFirst")
                        .HasColumnType("double");

                    b.Property<double>("ValueSecond")
                        .HasColumnType("double");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Errors");
                });
#pragma warning restore 612, 618
        }
    }
}
